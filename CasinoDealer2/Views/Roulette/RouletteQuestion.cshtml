@using CasinoDealer2.Models.RouletteModels
@model RouletteVM
@{
    ViewData["Title"] = "RouletteQuestion";
}

<div class="container" style="min-height: 100vh;">
    <div>
        <h1 class="card-title text-center">Roulette training</h1>
    </div>

    <div class="card w-100 mx-auto mb-3">
        <div class="card-body">
            <form asp-action="UpdateSettings" method="post" class="d-flex align-items-center justify-content-center">

                <div class="form-group mr-2 d-flex align-items-center">
                    <label asp-for="SettingsAR.MinBet" class="mr-2">Min</label>
                    <select asp-for="SettingsAR.MinBet" id="minBet" class="form-control" style="max-width: 80px">
                        <option value="1">1</option>
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="15">15</option>
                        <option value="20">20</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="200">200</option>
                        <option value="300">300</option>
                        <option value="500">500</option>
                        <option value="1000">1000</option>
                    </select>
                </div>

                <div class="form-group mr-2 d-flex align-items-center">
                    <label asp-for="SettingsAR.MaxBet" class="mr-2">Max</label>
                    <select asp-for="SettingsAR.MaxBet" id="maxBet" class="form-control" style="max-width: 80px">
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="20">20</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="200">200</option>
                        <option value="300">300</option>
                        <option value="400">400</option>
                        <option value="500">500</option>
                        <option value="1000">1.000</option>
                        <option value="2000">2.000</option>
                        <option value="5000">5.000</option>
                        <option value="10000">10.000</option>
                    </select>
                </div>

                <div class="form-group mr-2 d-flex align-items-center">
                    <label asp-for="SettingsAR.Increment" class="mr-2">Step</label>
                    <select asp-for="SettingsAR.Increment" class="form-control" style="max-width: 80px">
                        <option value="1">1</option>
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="500">500</option>
                    </select>
                </div>

                <div class="form-check mr-2 d-flex align-items-center">
                    <label asp-for="SettingsAR.IsStraightUp" class="form-check-label mr-2">StraightUp</label>
                    <input asp-for="SettingsAR.IsStraightUp" type="checkbox" class="form-check-input" />
                </div>
                <div class="form-check mr-2 d-flex align-items-center">
                    <label asp-for="SettingsAR.IsSplit" class="form-check-label mr-2">Split</label>
                    <input asp-for="SettingsAR.IsSplit" type="checkbox" class="form-check-input" />
                </div>
                <div class="form-check mr-2 d-flex align-items-center">
                    <label asp-for="SettingsAR.IsCorner" class="form-check-label mr-2">Corner</label>
                    <input asp-for="SettingsAR.IsCorner" type="checkbox" class="form-check-input" />
                </div>
                <div class="form-check mr-2 d-flex align-items-center">
                    <label asp-for="SettingsAR.IsStreet" class="form-check-label mr-2">Street</label>
                    <input asp-for="SettingsAR.IsStreet" type="checkbox" class="form-check-input" />
                </div>
                <div class="form-check mr-2 d-flex align-items-center">
                    <label asp-for="SettingsAR.IsSixline" class="form-check-label mr-2">Sixline</label>
                    <input asp-for="SettingsAR.IsSixline" type="checkbox" class="form-check-input" />
                </div>

                <div class="form-group mr-2 d-flex align-items-center">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>

            </form>

            <div class="form-group">
                <p class="text-center small">Save new settings before submitting an answer</p>
            </div>

        </div>

    </div>

    <div class="card w-50 mx-auto">
        <div class="card-body">
            <form asp-action="RouletteQuestion" asp-controller="Roulette" method="post" class="d-flex flex-column align-items-center">
                <input type="hidden" asp-for="QuestionAR.Id" />
                <input type="hidden" asp-for="QuestionAR.CorrectAnswer" id="correctAnswer" />
                <input type="hidden" asp-for="QuestionAR.IsCorrect" />
                <input type="hidden" asp-for="QuestionAR.IncorrectStreak" />
                <input type="hidden" asp-for="QuestionAR.QuestionText" />
                <input type="hidden" asp-for="QuestionAR.GameType" />
                <input type="hidden" asp-for="QuestionAR.StraitUp" />
                <input type="hidden" asp-for="QuestionAR.Split" />
                <input type="hidden" asp-for="QuestionAR.Corner" />
                <input type="hidden" asp-for="QuestionAR.Street" />
                <input type="hidden" asp-for="QuestionAR.SixLine" />

                <div class="form-group text-center">
                    <p>@Model.QuestionAR.QuestionText</p>
                    @if (Model.QuestionAR.IncorrectStreak > 0)
                    {
                        <p class="text-danger">Wrong!</p>
                    }
                </div>
                <div class="form-group">
                    <input asp-for="QuestionAR.Answer" type="number" step="any" value="" autofocus class="form-control" placeholder="answer" style="max-width: 150px" id="answerInput" />
                    <span asp-validation-for="QuestionAR.Answer" class="text-danger"></span>
                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-primary" id="submitButton">Submit</button>
                    <a class="btn btn-info" href="#" onclick="showCorrectAnswer(event)" id="helpButton">Help</a>
                    <button type="submit" class="btn btn-primary" id="nextButton" style="display: none;">Next</button>
                </div>

            </form>
        </div>
    </div>
</div>

<script>
    // show the correct answer
    function showCorrectAnswer(event) {
        event.preventDefault();
        // getting the correct answer
        var correctAnswer = document.getElementById('correctAnswer').value;
        console.log('Correct Answer:', correctAnswer);
        // setting the correct Answer in the input
        document.getElementById('answerInput').value = correctAnswer;
        // hiding the sumit button and help button
        document.getElementById('submitButton').style.display = 'none';
        document.getElementById('helpButton').style.display = 'none';
        // next question button appears
        document.getElementById('nextButton').style.display = 'block';
    }

    // // min-max implementation
    // document.getElementById('minBet').addEventListener('change', function () {
    //     var minBet = parseInt(this.value);
    //     var maxBetSelect = document.getElementById('maxBet');

    //     console.log('Min Bet changed:', minBet);

    //     // Define possible maxBet options
    //     var maxBetOptions = [100, 200, 300, 400, 500, 1000, 2000, 5000, 10000];

    //     // Clear existing options
    //     maxBetSelect.innerHTML = '';

    //     // Add new options based on minBet
    //     maxBetOptions.forEach(function (value) {
    //         if (value >= minBet) {
    //             var option = document.createElement('option');
    //             option.value = value;
    //             option.text = value;
    //             maxBetSelect.appendChild(option);
    //         }
    //     });

    //     // setting specific maxBet value based on minBet
    //     if (minBet === 100) {
    //         maxBetSelect.value = 2000;
    //     } else if (minBet === 200) {
    //         maxBetSelect.value = 2000;
    //     } else if (minBet === 500) {
    //         maxBetSelect.value = 5000;
    //     } else {
    //         // setting maxBet value to the first valid option if no specific match
    //         maxBetSelect.value = maxBetOptions.find(value => value >= minBet);
    //     }

    //     console.log('Max Bet options updated:', maxBetSelect.innerHTML);
    // });
</script>

<style>
    /* Hide spin buttons in input fields */
    input[type="number"]::-webkit-outer-spin-button,
    input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type="number"] {
        -moz-appearance: textfield; /* Firefox */
    }
</style>