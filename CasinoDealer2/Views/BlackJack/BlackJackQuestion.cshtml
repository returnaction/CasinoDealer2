@using CasinoDealer2.Models.BlackJackSettings
@using CasinoDealer2.Models.Enums
@model BlackJackVM

@{
    ViewData["Title"] = "Index";
}

<div class="container" style="min-height: 100vh;">
    <div>
        <h1 class="card-title text-center">BlackJack</h1>
    </div>

    <div class="card w-50 mx-auto mb-3">
        <div class="card-body">
            <form asp-action="UpdateSettings" method="post" class="d-flex align-items-center justify-content-center">

                <div class="form-group mr-2 d-flex align-items-center">
                    <label asp-for="Settings.MinBet" class="mr-2">Min</label>
                    <select asp-for="Settings.MinBet" id="minBet" class="form-control" style="max-width: 80px">
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="500">500</option>
                    </select>
                </div>

                <div class="form-group mr-2 d-flex align-items-center">
                    <label asp-for="Settings.MaxBet" class="mr-2">Max</label>
                    <select asp-for="Settings.MaxBet" id="maxBet" class="form-control" style="max-width: 80px">
                        <option value="100">100</option>
                        <option value="200">200</option>
                        <option value="300">300</option>
                        <option value="400">400</option>
                        <option value="500">500</option>
                        <option value="1000">1.000</option>
                        <option value="2000">2.000</option>
                        <option value="5000">5.000</option>
                        <option value="10000">10.000</option>
                    </select>
                </div>

                <div class="form-group mr-2 d-flex align-items-center">
                    <label asp-for="Settings.Increment" class="mr-2">Step</label>
                    <select asp-for="Settings.Increment" class="form-control" style="max-width: 80px">
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                    </select>
                </div>

                <div class="form-group mr-2 d-flex align-items-center">
                    <label asp-for="Settings.PayoutType" class="mr-2">Payout</label>
                    <select asp-for="Settings.PayoutType" class="form-control" style="max-width: 80px">
                        <option value="ThreeToTwo">3 to 2</option>
                        <option value="SixToFive">6 to 5</option>
                    </select>
                </div>

                <div class="form-group mr-2 d-flex align-items-center">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>

            </form>

            <div class="form-group">
                <p class="text-center small">Save new settings before submitting an answer</p>
            </div>

        </div>

    </div>

    <div class="card w-50 mx-auto">
        <div class="card-body">
            <form asp-action="BlackJackQuestion" method="post" class="d-flex flex-column align-items-center">
                <input type="hidden" asp-for="Question.Id" />
                <input type="hidden" asp-for="Question.CorrectAnswer" id="correctAnswer" />
                <input type="hidden" asp-for="Question.IsCorrect" />
                <input type="hidden" asp-for="Question.IncorrectStreak" />
                <input type="hidden" asp-for="Question.QuestionText" />
                <input type="hidden" asp-for="Question.GameType" />

                <div class="form-group text-center">
                    <p>@Model.Question.QuestionText</p>
                    @if (Model.Question.IncorrectStreak > 0)
                    {
                        <p class="text-danger">Wrong!</p>
                    }
                </div>
                <div class="form-group">
                    <input asp-for="Question.Answer" type="number" step="any" value="" autofocus class="form-control" placeholder="answer" style="max-width: 150px" id="answerInput" />
                    <span asp-validation-for="Question.Answer" class="text-danger"></span>
                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-primary" id="submitButton">Submit</button>
                    <a class="btn btn-info" href="#" onclick="showCorrectAnswer(event)" id="helpButton">Help</a>
                    <button type="submit" class="btn btn-primary" id="nextButton" style="display: none;">Next</button>
                </div>

            </form>
        </div>
    </div>
</div>

<script>
    // show the correct answer
    function showCorrectAnswer(event) {
        event.preventDefault();
        // getting the correct answer
        var correctAnswer = document.getElementById('correctAnswer').value;
        console.log('Correct Answer:', correctAnswer);
        // setting the correct Answer in the input
        document.getElementById('answerInput').value = correctAnswer;
        // hiding the sumit button and help button
        document.getElementById('submitButton').style.display = 'none';
        document.getElementById('helpButton').style.display = 'none';
        // next question button appears
        document.getElementById('nextButton').style.display = 'block';
    }

    // min-max implementation
    document.getElementById('minBet').addEventListener('change', function () {
        var minBet = parseInt(this.value);
        var maxBetSelect = document.getElementById('maxBet');

        console.log('Min Bet changed:', minBet);

        // Define possible maxBet options
        var maxBetOptions = [100, 200, 300, 400, 500, 1000, 2000, 5000, 10000];

        // Clear existing options
        maxBetSelect.innerHTML = '';

        // Add new options based on minBet
        maxBetOptions.forEach(function (value) {
            if (value >= minBet) {
                var option = document.createElement('option');
                option.value = value;
                option.text = value;
                maxBetSelect.appendChild(option);
            }
        });

        // setting specific maxBet value based on minBet
        if (minBet === 100) {
            maxBetSelect.value = 2000;
        } else if (minBet === 200) {
            maxBetSelect.value = 2000;
        } else if (minBet === 500) {
            maxBetSelect.value = 5000;
        } else {
            // setting maxBet value to the first valid option if no specific match
            maxBetSelect.value = maxBetOptions.find(value => value >= minBet);
        }

        console.log('Max Bet options updated:', maxBetSelect.innerHTML);
    });
</script>

<style>
    /* Hide spin buttons in input fields */
    input[type="number"]::-webkit-outer-spin-button,
    input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type="number"] {
        -moz-appearance: textfield; /* Firefox */
    }
</style>
